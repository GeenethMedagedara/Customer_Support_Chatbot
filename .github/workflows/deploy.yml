name: CI/CD Pipeline

on: [push]

jobs:
  build_and_push_to_ecr:
    name: Build and Push Docker Images to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
        docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build and Push FastAPI Image
      run: |
        docker build -f ./api/Dockerfile.fastapi -t fastapi:latest ./api
        docker tag fastapi:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fastapi:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fastapi:latest

    - name: Build and Push Rasa Image
      run: |
        docker build -f ./Rasa_chatbot/Dockerfile.rasa -t rasa-chatbot:latest ./Rasa_chatbot
        docker tag rasa-chatbot:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rasa-chatbot:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rasa-chatbot:latest

    - name: Build and Push Rasa Actions Image
      run: |
        docker build -f ./Rasa_chatbot/actions/Dockerfile.actions -t rasa-actions:latest ./Rasa_chatbot/actions
        docker tag rasa-actions:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rasa-actions:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/rasa-actions:latest

    - name: Build and Push Frontend Image
      run: |
        docker build -f ./frontend/Dockerfile.frontend -t react-app:latest ./frontend
        docker tag react-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/react-app:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/react-app:latest

  deploy_to_ecs:
    name: Deploy to Amazon ECS
    needs: build_and_push_to_ecr
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ecs-task-definition.json
        service: <ecs-service-name>
        cluster: <ecs-cluster-name>
        wait-for-service-stability: true
